let lastOpenedFiles = JSON.parse(localStorage.getItem("lastOpened")) || {};
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–∞–Ω
const currentUserData = users.find(u => u.id === currentUser.id);
if (currentUserData?.isBanned) {
  alert("–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!");
  tg.close();
}
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const tg = window.Telegram.WebApp;
tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

// –ò–∑–º–µ–Ω–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–∞–ø–æ–∫
let projects = JSON.parse(localStorage.getItem("projects")) || {
  active: { folders: [] },
  completed: { folders: [] },
  abandoned: { folders: [] },
  all: [] // –í—Å–µ –Ω–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
};

// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (431218382)
let currentUser = {
  id: tg.initDataUnsafe.user?.id || 0,
  isAdmin: tg.initDataUnsafe.user?.id === 431218382 // 
};

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const elements = {
  lastBlueprintBtn: document.getElementById("last-blueprint"),
  activeProjectsBtn: document.getElementById("active-projects"),
  adminPanelBtn: document.getElementById("admin-panel"),
  modal: null
};

// ========================
// –õ–æ–≥–∏–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
// ========================

// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function createModal(title, content) {
  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  if (elements.modal) elements.modal.remove();

  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  elements.modal = document.createElement("div");
  elements.modal.className = "modal";

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  const modalHeader = document.createElement("div");
  modalHeader.className = "modal-header";
  modalHeader.innerHTML = `
    <h2>${title}</h2>
    <button class="close-btn">&times;</button>
  `;

  // –ö–æ–Ω—Ç–µ–Ω—Ç
  const modalContent = document.createElement("div");
  modalContent.className = "modal-content";
  modalContent.appendChild(content);

  // –°–æ–±–∏—Ä–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  elements.modal.appendChild(modalHeader);
  elements.modal.appendChild(modalContent);
  document.body.appendChild(elements.modal);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫
  elements.modal.querySelector(".close-btn").addEventListener("click", () => {
    elements.modal.remove();
  });
}

function showFilesList(project) {
  const list = document.createElement("div");
  project.files.forEach(file => {
    const fileItem = document.createElement("div");
    fileItem.className = "file-item";
    fileItem.innerHTML = `
      <span>üìÑ ${file.name}</span>
      <span class="file-date">${file.date}</span>
    `;
    fileItem.addEventListener("click", () => {
  // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const pdfWindow = window.open("");
  pdfWindow.document.write(`
    <embed 
      width="100%" 
      height="100%" 
      src="${file.content}" 
      type="application/pdf"
    />
  `);
});
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π —Ñ–∞–π–ª
      lastOpenedFiles[currentUser.id] = file;
      localStorage.setItem("lastOpened", JSON.stringify(lastOpenedFiles));
      updateLastFileName();
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º PDF (–ø—Ä–∏–º–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞)
      tg.openLink(`https://your-server.com/pdfs/${file.name}`);
    });
    list.appendChild(fileItem);
  });
  createModal(project.address, list);
}

// –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é:
function updateLastFileName() {
  const lastFile = lastOpenedFiles[currentUser.id];
  const fileNameElement = document.getElementById("last-file-name");
  fileNameElement.textContent = lastFile ? lastFile.name : "–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω";
}

// –í—ã–∑–æ–≤–∏—Ç–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:
updateLastFileName();

// ========================
// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
// ========================

// –ö–Ω–æ–ø–∫–∞ "–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –æ–±—ä–µ–∫—Ç—ã"
elements.activeProjectsBtn.addEventListener("click", () => {
  showProjectsList("active");
});

// –°–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
if (!currentUser.isAdmin) {
  document.querySelector(".admin-section").style.display = "none";
}

// ========================
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
// ========================
console.log("User ID:", currentUser.id);
// ========================
// –õ–æ–≥–∏–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
// ========================

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
document.getElementById("admin-panel").addEventListener("click", () => {
  if (!currentUser.isAdmin) {
    alert("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!");
    return;
  }

  const adminContent = document.createElement("div");
  adminContent.innerHTML = `
    <button class="admin-feature-btn" id="add-admin">üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞</button>
    <button class="admin-feature-btn" id="ban-user">üö´ –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
    <button class="admin-feature-btn" id="upload-pdf">üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å PDF</button>
    <button class="admin-feature-btn" id="move-files">üì¶ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª—ã</button>
  `;
  createModal("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", adminContent);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
  document.getElementById("add-admin").addEventListener("click", () => {
    const userId = prompt("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
    if (userId) {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
      alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Å—Ç–∞–ª –∞–¥–º–∏–Ω–æ–º!`);
    }
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ PDF
  document.getElementById("upload-pdf").addEventListener("click", () => {
    const input = document.createElement("input");
    input.type = "file";
    input.accept = "application/pdf";
    input.onchange = (e) => {
  const file = e.target.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = function(event) {
      const newFile = {
        name: file.name,
        date: new Date().toISOString().split("T")[0],
        content: event.target.result // base64 data
      };
      
      projects.all.push(newFile);
      localStorage.setItem("projects", JSON.stringify(projects));
      alert("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª '–í—Å–µ'!");
    };
    reader.readAsDataURL(file);
  }
};

    input.click();
  });
});
// ========================
// –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// ========================
let users = JSON.parse(localStorage.getItem("users")) || [];

// –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if (currentUser.id && !users.some(u => u.id === currentUser.id)) {
  users.push({
    id: currentUser.id,
    isAdmin: false,
    isBanned: false,
    firstAccess: new Date().toISOString()
  });
  localStorage.setItem("users", JSON.stringify(users));
}

// ========================
// –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
// ========================
document.getElementById("completed-projects").addEventListener("click", () => {
  showProjectsList("completed");
});

document.getElementById("abandoned-projects").addEventListener("click", () => {
  showProjectsList("abandoned");
});

// ========================
// –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)
// ========================
document.getElementById("users-list").addEventListener("click", () => {
  if (!currentUser.isAdmin) {
    alert("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!");
    return;
  }

  const userList = document.createElement("div");
  users.forEach(user => {
    const userEl = document.createElement("div");
    userEl.className = "user-item";
    userEl.innerHTML = `
      <div class="user-info">
        <span>ID: ${user.id}</span>
        <span>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.firstAccess.split("T")[0]}</span>
        ${user.isBanned ? 'üî¥ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' : ''}
      </div>
      <div class="user-actions">
        ${!user.isAdmin ? `<button class="make-admin-btn" data-id="${user.id}">–°–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–æ–º</button>` : ''}
        <button class="ban-user-btn" data-id="${user.id}">
          ${user.isBanned ? '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å'}
        </button>
      </div>
    `;
    userList.appendChild(userEl);
  });

  createModal("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", userList);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  document.querySelectorAll(".make-admin-btn").forEach(btn => {
    btn.addEventListener("click", (e) => {
      const userId = parseInt(e.target.dataset.id);
      users = users.map(u => u.id === userId ? {...u, isAdmin: true} : u);
      localStorage.setItem("users", JSON.stringify(users));
      alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Å—Ç–∞–ª –∞–¥–º–∏–Ω–æ–º!`);
      e.target.disabled = true;
    });
  });

  document.querySelectorAll(".ban-user-btn").forEach(btn => {
    btn.addEventListener("click", (e) => {
      const userId = parseInt(e.target.dataset.id);
      users = users.map(u => u.id === userId ? {...u, isBanned: !u.isBanned} : u);
      localStorage.setItem("users", JSON.stringify(users));
      alert(`–°—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –∏–∑–º–µ–Ω–µ–Ω!`);
      e.target.textContent = u.isBanned ? '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å';
    });
  });
});
// ========================
// –õ–æ–≥–∏–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ "–í—Å—ë" (–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)
// ========================
function showAllFiles() {
  const content = document.createElement("div");
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
  const header = document.createElement("div");
  header.innerHTML = `<h3>–í—Å–µ —Ñ–∞–π–ª—ã (${projects.all.length})</h3>`;
  content.appendChild(header);

  // –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
  const filesList = document.createElement("div");
  projects.all.forEach((file, index) => {
    const fileEl = document.createElement("div");
    fileEl.className = "file-item";
    fileEl.innerHTML = `
      <span>üìÑ ${file.name}</span>
      <div class="file-actions">
        <select class="move-select" data-index="${index}">
          <option value="">–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤...</option>
          <option value="active">–î–µ–π—Å—Ç–≤—É—é—â–∏–µ</option>
          <option value="completed">–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ</option>
          <option value="abandoned">–ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–µ</option>
        </select>
      </div>
    `;
    filesList.appendChild(fileEl);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
  filesList.querySelectorAll(".move-select").forEach(select => {
    select.addEventListener("change", (e) => {
      const type = e.target.value;
      const index = e.target.dataset.index;
      if (type) {
        const file = projects.all.splice(index, 1)[0];
        projects[type].folders[0].files.push(file); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–µ—Ä–≤—É—é –ø–∞–ø–∫—É —Ä–∞–∑–¥–µ–ª–∞
        localStorage.setItem("projects", JSON.stringify(projects));
        showAllFiles(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
      }
    });
  });

  createModal("–í—Å–µ —Ñ–∞–π–ª—ã", filesList);
}

// ========================
// –†–µ–¥–∞–∫—Ç–æ—Ä –≤–∫–ª–∞–¥–æ–∫ (–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)
// ========================
function showTabEditor(type) {
  const content = document.createElement("div");
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏
  const newFolderInput = document.createElement("input");
  newFolderInput.placeholder = "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏";
  const createBtn = document.createElement("button");
  createBtn.textContent = "–°–æ–∑–¥–∞—Ç—å";
  createBtn.onclick = () => {
    if (newFolderInput.value) {
      projects[type].folders.push({
        name: newFolderInput.value,
        files: []
      });
      localStorage.setItem("projects", JSON.stringify(projects));
      showTabEditor(type);
    }
  };
  
  content.appendChild(newFolderInput);
  content.appendChild(createBtn);

  // –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–æ–∫
  const foldersList = document.createElement("div");
  projects[type].folders.forEach((folder, index) => {
    const folderEl = document.createElement("div");
    folderEl.className = "folder-item";
    folderEl.innerHTML = `
      <input type="text" value="${folder.name}" class="folder-name" data-index="${index}">
      <button class="delete-folder" data-index="${index}">‚ùå</button>
    `;
    
    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
    folderEl.querySelector(".folder-name").addEventListener("change", (e) => {
      projects[type].folders[e.target.dataset.index].name = e.target.value;
      localStorage.setItem("projects", JSON.stringify(projects));
    });

    // –£–¥–∞–ª–µ–Ω–∏–µ
    folderEl.querySelector(".delete-folder").addEventListener("click", (e) => {
      projects[type].folders.splice(e.target.dataset.index, 1);
      localStorage.setItem("projects", JSON.stringify(projects));
      showTabEditor(type);
    });

    foldersList.appendChild(folderEl);
  });

  content.appendChild(foldersList);
  createModal(`–†–µ–¥–∞–∫—Ç–æ—Ä: ${type}`, content);
}

// ========================
// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
// ========================
function showProjectsList(type) {
  const list = document.createElement("div");
  
  // –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  if (currentUser.isAdmin) {
    const editBtn = document.createElement("button");
    editBtn.textContent = "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–∑–¥–µ–ª";
    editBtn.className = "edit-section-btn";
    editBtn.onclick = () => showTabEditor(type);
    list.appendChild(editBtn);
  }

  // –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫
  projects[type].folders.forEach(folder => {
    const folderBtn = document.createElement("button");
    folderBtn.className = "folder-btn";
    folderBtn.innerHTML = `
      üìÅ ${folder.name} (${folder.files.length} —Ñ–∞–π–ª–æ–≤)
    `;
    folderBtn.onclick = () => showFilesList(folder.files);
    list.appendChild(folderBtn);
  });

  createModal(type, list);
}

// ========================
// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
// ========================
// –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ:
const adminContent = document.createElement("div");
adminContent.innerHTML += `
  <button class="admin-feature-btn" id="manage-all-files">üìö –í—Å–µ —Ñ–∞–π–ª—ã</button>
  <button class="admin-feature-btn" id="edit-active">‚úèÔ∏è –î–µ–π—Å—Ç–≤—É—é—â–∏–µ</button>
  <button class="admin-feature-btn" id="edit-completed">‚úèÔ∏è –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ</button>
  <button class="admin-feature-btn" id="edit-abandoned">‚úèÔ∏è –ó–∞–±—Ä–æ—à–µ–Ω–Ω—ã–µ</button>
`;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
document.getElementById("manage-all-files").addEventListener("click", showAllFiles);
document.getElementById("edit-active").addEventListener("click", () => showTabEditor("active"));
document.getElementById("edit-completed").addEventListener("click", () => showTabEditor("completed"));
document.getElementById("edit-abandoned").addEventListener("click", () => showTabEditor("abandoned"));
