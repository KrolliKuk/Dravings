// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand();

// –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ localStorage)
let projects = JSON.parse(localStorage.getItem("projects")) || {
  active: [],
  completed: [],
  abandoned: [],
  all: [] // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
};

let users = JSON.parse(localStorage.getItem("users")) || [];
const mainAdminId = 431218382; // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® REAL TG ID

// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
const currentUser = {
  id: tg.initDataUnsafe.user?.id || 0,
  isAdmin: tg.initDataUnsafe.user?.id === mainAdminId
};

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const elements = {
  lastBlueprintBtn: document.getElementById("last-blueprint"),
  activeProjectsBtn: document.getElementById("active-projects"),
  adminPanelBtn: document.getElementById("admin-panel"),
  modal: null
};

// ========================
// –õ–æ–≥–∏–∫–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
// ========================
function createModal(title, content) {
  if (elements.modal) elements.modal.remove();
  
  elements.modal = document.createElement("div");
  elements.modal.className = "modal";
  
  const modalHeader = document.createElement("div");
  modalHeader.className = "modal-header";
  modalHeader.innerHTML = `
    <h2>${title}</h2>
    <button class="close-btn">&times;</button>
  `;
  
  const modalContent = document.createElement("div");
  modalContent.className = "modal-content";
  modalContent.appendChild(content);
  
  elements.modal.appendChild(modalHeader);
  elements.modal.appendChild(modalContent);
  document.body.appendChild(elements.modal);
  
  modalHeader.querySelector(".close-btn").addEventListener("click", () => {
    elements.modal.remove();
  });
}

// ========================
// –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
// ========================
function showProjectsList(type) {
  const list = document.createElement("div");
  projects[type].forEach(project => {
    const btn = document.createElement("button");
    btn.className = "project-btn";
    btn.textContent = project.address;
    btn.addEventListener("click", () => showFilesList(project));
    list.appendChild(btn);
  });
  createModal("–°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤", list);
}

function showFilesList(project) {
  const list = document.createElement("div");
  project.files.forEach(file => {
    const fileItem = document.createElement("div");
    fileItem.className = "file-item";
    fileItem.innerHTML = `
      <span>üìÑ ${file.name}</span>
      <span class="file-date">${file.date}</span>
    `;
    list.appendChild(fileItem);
  });
  createModal(project.address, list);
}

// ========================
// –õ–æ–≥–∏–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
// ========================
function handleAdminPanel() {
  if (!currentUser.isAdmin) {
    tg.showAlert("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω!");
    return;
  }

  const adminContent = document.createElement("div");
  adminContent.innerHTML = `
    <button class="admin-feature-btn" id="add-admin">üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞</button>
    <button class="admin-feature-btn" id="ban-user">üö´ –ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</button>
    <button class="admin-feature-btn" id="upload-pdf">üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å PDF</button>
  `;

  createModal("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", adminContent);

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
  document.getElementById("add-admin").addEventListener("click", () => {
    const userId = prompt("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
    if (userId) {
      users.push({ 
        id: parseInt(userId), 
        isAdmin: true,
        isBanned: false 
      });
      localStorage.setItem("users", JSON.stringify(users));
      alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —Å—Ç–∞–ª –∞–¥–º–∏–Ω–æ–º!`);
    }
  });

  // –ë–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  document.getElementById("ban-user").addEventListener("click", () => {
    const userId = prompt("–í–≤–µ–¥–∏—Ç–µ ID –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:");
    if (userId) {
      users = users.map(u => 
        u.id === parseInt(userId) ? {...u, isBanned: true} : u
      );
      localStorage.setItem("users", JSON.stringify(users));
      alert(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`);
    }
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ PDF
  document.getElementById("upload-pdf").addEventListener("click", () => {
    const input = document.createElement("input");
    input.type = "file";
    input.accept = "application/pdf";
    input.onchange = (e) => {
      const file = e.target.files[0];
      if (file) {
        projects.all.push({
          name: file.name,
          date: new Date().toISOString().split("T")[0]
        });
        localStorage.setItem("projects", JSON.stringify(projects));
        alert("–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª '–í—Å–µ'!");
      }
    };
    input.click();
  });
}

// ========================
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
// ========================
document.addEventListener("DOMContentLoaded", () => {
  // –°–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (!currentUser.isAdmin) {
    document.querySelector(".admin-section").style.display = "none";
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  elements.activeProjectsBtn.addEventListener("click", () => showProjectsList("active"));
  document.getElementById("completed-projects").addEventListener("click", () => showProjectsList("completed"));
  document.getElementById("abandoned-projects").addEventListener("click", () => showProjectsList("abandoned"));
  elements.adminPanelBtn.addEventListener("click", handleAdminPanel);

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log("–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", {
    id: currentUser.id,
    isAdmin: currentUser.isAdmin,
    users: users
  });
});
